{
  "name": "progressive-framework-v5",
  "version": "1.0.0",
  "description": "Complete AI Agent Orchestration System with Emergency Response Capabilities",
  "main": "server.js",
  "engines": {
    "node": ">=20.0.0",
    "npm": ">=10.0.0"
  },
  "scripts": {
    "start": "node server.js",
    "dev": "nodemon server.js",
    "dev:debug": "nodemon --inspect=0.0.0.0:9229 server.js",
    "build": "npm run lint && npm run test:ci",
    "prepare-ci": "npm run setup:directories",
    "setup:directories": "node -e \"const fs = require('fs'); ['data', 'data/conversations', 'data/budgets', 'data/emergency', 'data/backups', 'logs', 'coverage', 'test-results'].forEach(dir => fs.mkdirSync(dir, { recursive: true })); console.log('Directories created successfully');\"",
    "lint": "eslint src/ --format json --output-file lint-results.json || eslint src/",
    "lint:fix": "eslint src/ --fix",
    "format": "prettier --write \"src/**/*.js\" \"*.js\"",
    "format:check": "prettier --check \"src/**/*.js\" \"*.js\"",
    "test": "npm run setup:directories && jest --testPathPattern=tests/unit --coverage --passWithNoTests",
    "test:unit": "npm run setup:directories && jest --testPathPattern=tests/unit --coverage",
    "test:integration": "npm run setup:directories && jest --testPathPattern=tests/integration --passWithNoTests",
    "test:emergency": "npm run setup:directories && jest --testPathPattern=tests/emergency --verbose --detectOpenHandles",
    "test:agents": "npm run setup:directories && jest --testPathPattern=tests/agents --passWithNoTests",
    "test:backup-restore": "npm run setup:directories && jest --testPathPattern=tests/backup",
    "test:ci": "npm run setup:directories && jest --ci --coverage --watchAll=false --passWithNoTests",
    "test:coverage": "npm run setup:directories && jest --coverage --coverageReporters=text-lcov > coverage/lcov.info",
    "test:watch": "jest --watch",
    "docker:build": "docker build -t progressive-framework-v5 .",
    "security:audit": "npm audit --audit-level=moderate",
    "security:fix": "npm audit fix"
  },
  "keywords": [
    "ai-agents",
    "master-control-agent",
    "nutrition-planning",
    "workout-planning",
    "budget-management",
    "emergency-response",
    "circuit-breaker",
    "conversation-intelligence",
    "semantic-search",
    "enterprise-ai",
    "production-ready"
  ],
  "author": "Progressive Framework V5 Team",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/your-org/progressive-framework-v5.git"
  },
  "dependencies": {
    "compression": "^1.7.4",
    "cors": "^2.8.5",
    "express": "^4.21.2",
    "express-rate-limit": "^8.0.1",
    "fs-extra": "^11.1.1",
    "helmet": "^7.0.0",
    "leven": "^4.0.0",
    "morgan": "^1.10.0",
    "natural": "^8.1.0",
    "stemmer": "^2.0.1",
    "stopword": "^3.1.5",
    "winston": "^3.10.0"
  },
  "devDependencies": {
    "@babel/core": "^7.22.10",
    "@babel/preset-env": "^7.22.10",
    "artillery": "^2.0.1",
    "eslint": "^8.57.0",
    "@eslint/js": "^8.57.0",
    "http-server": "^14.1.1",
    "jest": "^29.7.0",
    "jsdoc": "^4.0.2",
    "nodemon": "^3.0.1",
    "prettier": "^3.0.2",
    "supertest": "^7.1.3"
  },
  "eslintConfig": {
    "env": {
      "node": true,
      "es2021": true,
      "jest": true
    },
    "extends": [
      "eslint:recommended"
    ],
    "parserOptions": {
      "ecmaVersion": 2021,
      "sourceType": "module"
    },
    "rules": {
      "no-console": "warn",
      "no-unused-vars": ["error", { "argsIgnorePattern": "^_" }],
      "no-undef": "error",
      "semi": ["error", "always"],
      "quotes": ["error", "single"],
      "indent": ["error", 4]
    }
  },
  "prettier": {
    "singleQuote": true,
    "tabWidth": 4,
    "semi": true,
    "trailingComma": "es5",
    "printWidth": 100
  },
  "nodemonConfig": {
    "watch": [
      "src/",
      "server.js"
    ],
    "ext": "js,json",
    "ignore": [
      "data/",
      "logs/",
      "coverage/",
      "node_modules/"
    ],
    "env": {
      "NODE_ENV": "development",
      "DEBUG": "progressive:*"
    }
  },
  "jest": {
    "setupFilesAfterEnv": ["<rootDir>/tests/setup.js"],
    "testPathIgnorePatterns": ["/node_modules/"],
    "collectCoverageFrom": [
      "src/**/*.js",
      "!src/**/*.test.js", 
      "!src/**/*.spec.js"
    ],
    "testTimeout": 30000,
    "detectOpenHandles": true,
    "forceExit": true,
    "maxWorkers": 4,
    "testEnvironment": "node"
  }
}